Val
%%%
import java.util.*;

public abstract class Val {

    public static Val [] toArray(List<Val> valList) {
        int n = valList.size();
        return valList.toArray(new Val[n]);
    }

    public boolean isTrue() {
        return true; // any Val is true except for an IntVal of zero
    }

    public IntVal intVal() {
        throw new RuntimeException(this + ": not an Int");
    }
}
%%%

IntVal
%%%
import java.util.*;

public class IntVal extends Val {

    public int val;
    
    public IntVal(String s) {
	val = Integer.parseInt(s);
    }
    
    public IntVal(int v) {
	val = v;
    }

    public IntVal intVal() {
        return this;
    }
    
    public String toString() {
	return "" + val;
    }

    public boolean isTrue() {
	return val != 0;
    }

    public static void main(String [] args) {
	Val v = new IntVal(3);
	Val w = new IntVal(0);
	System.out.println("v=" + v);
	System.out.println("w=" + w);
    }
    
}
%%%
