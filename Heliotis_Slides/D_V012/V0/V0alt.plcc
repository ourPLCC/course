# Language V0alt: primitive expressions
# The code simply prints out the expressions.

skip WHITESPACE '\s+'
skip COMMENT '%.*'
LIT '\d+'
LPAREN '\('
RPAREN '\)'
COMMA ','
ADDOP '\+'
SUBOP '\-'
ADD1OP 'add1'
SUB1OP 'sub1'
VAR '[A-Za-z]\w*'
%
<program>        ::= <exp>
<exp>:LitExp     ::= <LIT>
<exp>:VarExp     ::= <VAR>
<exp>:PrimAppExp ::= <prim> LPAREN <operands> RPAREN
<operands>       **= <exp> +COMMA
<prim>:AddPrim   ::= ADDOP
<prim>:SubPrim   ::= SUBOP
<prim>:Add1Prim  ::= ADD1OP
<prim>:Sub1Prim  ::= SUB1OP
%

# class methods that just print out the expression
# (Remember that use of toString is only mandated at the tree's
#  root node.)

#include Add1Prim-i.java
#include AddPrim-i.java
#include LitExp-i.java
#include PrimAppExp-i.java
#include Program-i.java
#include Operands-i.java
#include Sub1Prim-i.java
#include SubPrim-i.java
#include VarExp-i.java

