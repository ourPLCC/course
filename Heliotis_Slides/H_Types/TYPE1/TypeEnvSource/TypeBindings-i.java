
TypeBindings
%%%

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

class TypeBindings {

    public final List< TypeBinding > typeBindingList;

    /**
     * Make a new TypeBindings object from an exising List of Binding
     * objects
     */
    public TypeBindings( List< TypeBinding > typeBindingList ) {
        this.typeBindingList = typeBindingList;
    }

    /**
     * Create bindings from the parallel arrays constructed by code
     * generated by PLCC.
     */
    public TypeBindings( List< String > idList, List< Type > typeList ) {
        // the Lists must be the same size
        if ( idList.size() != typeList.size() )
            throw new RuntimeException( "TypeBindings: List size mismatch" );
        typeBindingList = new LinkedList<>();
        Iterator< String > is = idList.iterator();
        Iterator< Type > ts = typeList.iterator();
        while ( is.hasNext() ) {
            TypeBinding tb = new TypeBinding( is.next(), ts.next() );
            typeBindingList.add( tb );
        }
    }

    /**
     * Add a new Binding to the list.
     * Used by the declare statement.
     */
    public void add( TypeBinding tb ) {
        this.typeBindingList.add( tb );
    }

    /**
     * Add a new Binding to the list.
     * Used by the declare statement.
     */
    public void addFirst( TypeBinding tb ) {
        this.typeBindingList.add( 0, tb );
    }

}

%%%

